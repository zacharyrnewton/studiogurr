{"version":3,"sources":["webpack:///./src/templates/archive.js"],"names":["Archive","data","title","RichText","asText","prismic","archive","className","style","archiveContentWrapper","fluid","hero_imageSharp","childImageSharp","alt","hero_image","bodyContentWrapper","bodyContent","aside","archive_number","Date","year","getFullYear","render","services","body","location","bodyCopy","footerContent","collaborators","production","side_imageSharp","side_image","gallery","map","image","galleryImage","gallery_imageSharp","gallery_image","key","id","pageQuery"],"mappings":"2FAAA,wJAmDeA,UA3CC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAOC,WAASC,OAAOH,EAAKI,QAAQC,QAAQJ,SACjD,yBAAKK,UAAWC,IAAMC,uBACpB,kBAAC,IAAD,CAAKC,MAAOT,EAAKI,QAAQC,QAAQK,gBAAgBC,gBAAgBF,MAAOG,IAAKZ,EAAKI,QAAQC,QAAQQ,WAAWD,MAC7G,yBAAKN,UAAWC,IAAMO,oBACpB,yBAAKR,UAAWC,IAAMQ,aACpB,yBAAKT,UAAWC,IAAMS,OACpB,2BAAIhB,EAAKI,QAAQC,QAAQY,gBAAkB,yCAAKjB,EAAKI,QAAQC,QAAQY,eAAe,8BAApF,YAAyGC,eAAKlB,EAAKI,QAAQC,QAAQc,MAAMC,eACxIlB,WAASmB,OAAOrB,EAAKI,QAAQC,QAAQiB,WAExC,yBAAKhB,UAAWC,IAAMgB,MACnBrB,WAASmB,OAAOrB,EAAKI,QAAQC,QAAQJ,OACrCC,WAASmB,OAAOrB,EAAKI,QAAQC,QAAQmB,UACtC,yBAAKlB,UAAWC,IAAMkB,UACnBvB,WAASmB,OAAOrB,EAAKI,QAAQC,QAAQkB,QAG1C,yBAAKjB,UAAWC,IAAMmB,eACnB1B,EAAKI,QAAQC,QAAQsB,eACpB,oCAAE,uBAAGrB,UAAWC,IAAMoB,eAApB,iBACDzB,WAASmB,OAAOrB,EAAKI,QAAQC,QAAQsB,gBAEvC3B,EAAKI,QAAQC,QAAQuB,YACpB,oCAAE,uBAAGtB,UAAWC,IAAMqB,YAApB,cACD1B,WAASmB,OAAOrB,EAAKI,QAAQC,QAAQuB,eAI5C,kBAAC,IAAD,CAAKnB,MAAOT,EAAKI,QAAQC,QAAQwB,gBAAgBlB,gBAAgBF,MAAOG,IAAKZ,EAAKI,QAAQC,QAAQyB,WAAWlB,QAGjH,yBAAKN,UAAWC,IAAMwB,SACnB/B,EAAKI,QAAQC,QAAQ0B,QAAQC,KAAI,SAAAC,GAChC,OACE,kBAAC,IAAD,CAAK3B,UAAWC,IAAM2B,aAAczB,MAAOwB,EAAME,mBAAmBxB,gBAAgBF,MAAOG,IAAKqB,EAAMG,cAAcxB,IAAKyB,IAAKJ,EAAME,mBAAmBG,WAS5J,IAAMC,EAAS","file":"component---src-templates-archive-js-090c0648b9066079f456.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { RichText, Date } from 'prismic-reactjs'\nimport style from \"../sass/modules/archive.module.sass\"\nimport Img from \"gatsby-image\"\n\nconst Archive = ({ data }) => {\n  return (\n    <Layout>\n      <SEO title={RichText.asText(data.prismic.archive.title)} />\n      <div className={style.archiveContentWrapper}>\n        <Img fluid={data.prismic.archive.hero_imageSharp.childImageSharp.fluid} alt={data.prismic.archive.hero_image.alt}/>\n        <div className={style.bodyContentWrapper}>\n          <div className={style.bodyContent}>\n            <div className={style.aside}>\n              <p>{data.prismic.archive.archive_number && <>â—Š {data.prismic.archive.archive_number}<br /></> }Archived {Date(data.prismic.archive.year).getFullYear()}</p>\n              {RichText.render(data.prismic.archive.services)}\n            </div>\n            <div className={style.body}>\n              {RichText.render(data.prismic.archive.title)}\n              {RichText.render(data.prismic.archive.location)}\n              <div className={style.bodyCopy}>\n                {RichText.render(data.prismic.archive.body)}\n              </div>\n            </div>\n            <div className={style.footerContent}>\n              {data.prismic.archive.collaborators &&\n                <><p className={style.collaborators}>Collaborators</p>\n                {RichText.render(data.prismic.archive.collaborators)}</>\n              }\n              {data.prismic.archive.production &&\n                <><p className={style.production}>Production</p>\n                {RichText.render(data.prismic.archive.production)}</>\n              }\n            </div>\n          </div>\n          <Img fluid={data.prismic.archive.side_imageSharp.childImageSharp.fluid} alt={data.prismic.archive.side_image.alt}/>\n        </div>\n      </div>\n      <div className={style.gallery}>\n        {data.prismic.archive.gallery.map(image => {\n          return (\n            <Img className={style.galleryImage} fluid={image.gallery_imageSharp.childImageSharp.fluid} alt={image.gallery_image.alt} key={image.gallery_imageSharp.id} />\n          )\n        })}\n      </div>\n    </Layout>\n  )\n}\nexport default Archive\n\nexport const pageQuery = graphql`\n  query MyQuery($uid: String!) {\n    prismic {\n      archive(uid: $uid, lang: \"en-us\") {\n        _linkType\n        production\n        year\n        title\n        archive_number\n        side_image\n        side_imageSharp {\n          id\n          childImageSharp {\n            id\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        services\n        location\n        hero_image\n        hero_imageSharp {\n          id\n          childImageSharp {\n            id\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        collaborators\n        body\n        gallery {\n          gallery_image\n          gallery_imageSharp {\n            id\n            childImageSharp {\n              id\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}