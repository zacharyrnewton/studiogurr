{"version":3,"sources":["webpack:///./src/templates/work.js"],"names":["Archive","data","title","RichText","asText","prismic","archive","className","style","archiveContentWrapper","heroImage","fluid","hero_imageSharp","childImageSharp","alt","hero_image","bodyContentWrapper","bodyContent","aside","archive_number","Date","year","getFullYear","services","render","body","location","bodyCopy","footerContent","collaborators","production","sideImage","side_imageSharp","side_image","gallery","map","image","galleryImage","gallery_imageSharp","gallery_image","key","id","pageQuery"],"mappings":"2FAAA,wJAoDeA,UA5CC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAOC,WAASC,OAAOH,EAAKI,QAAQC,QAAQJ,SACjD,yBAAKK,UAAWC,IAAMC,uBACpB,kBAAC,IAAD,CAAKF,UAAWC,IAAME,UAAWC,MAAOV,EAAKI,QAAQC,QAAQM,gBAAgBC,gBAAgBF,MAAOG,IAAKb,EAAKI,QAAQC,QAAQS,WAAWD,MACzI,yBAAKP,UAAWC,IAAMQ,oBACpB,yBAAKT,UAAWC,IAAMS,aACpB,yBAAKV,UAAWC,IAAMU,OACpB,2BAAIjB,EAAKI,QAAQC,QAAQa,gBAAkB,yCAAKlB,EAAKI,QAAQC,QAAQa,eAAe,8BAApF,YAAyGC,eAAKnB,EAAKI,QAAQC,QAAQe,MAAMC,eACxIrB,EAAKI,QAAQC,QAAQiB,UAAY,oCAAGpB,WAASqB,OAAOvB,EAAKI,QAAQC,QAAQiB,YAE5E,yBAAKhB,UAAWC,IAAMiB,MACnBtB,WAASqB,OAAOvB,EAAKI,QAAQC,QAAQJ,OACrCD,EAAKI,QAAQC,QAAQoB,UAAY,oCAAGvB,WAASqB,OAAOvB,EAAKI,QAAQC,QAAQoB,WAC1E,2BAAIN,eAAKnB,EAAKI,QAAQC,QAAQe,MAAMC,eACpC,yBAAKf,UAAWC,IAAMmB,UACnBxB,WAASqB,OAAOvB,EAAKI,QAAQC,QAAQmB,QAG1C,yBAAKlB,UAAWC,IAAMoB,eACnB3B,EAAKI,QAAQC,QAAQuB,eACpB,oCAAE,uBAAGtB,UAAWC,IAAMqB,eAApB,iBACD1B,WAASqB,OAAOvB,EAAKI,QAAQC,QAAQuB,gBAEvC5B,EAAKI,QAAQC,QAAQwB,YACpB,oCAAE,uBAAGvB,UAAWC,IAAMsB,YAApB,cACD3B,WAASqB,OAAOvB,EAAKI,QAAQC,QAAQwB,eAI5C,kBAAC,IAAD,CAAKvB,UAAWC,IAAMuB,UAAWpB,MAAOV,EAAKI,QAAQC,QAAQ0B,gBAAgBnB,gBAAgBF,MAAOG,IAAKb,EAAKI,QAAQC,QAAQ2B,WAAWnB,QAG7I,yBAAKP,UAAWC,IAAM0B,SACnBjC,EAAKI,QAAQC,QAAQ4B,QAAQC,KAAI,SAAAC,GAChC,OACE,kBAAC,IAAD,CAAK7B,UAAWC,IAAM6B,aAAc1B,MAAOyB,EAAME,mBAAmBzB,gBAAgBF,MAAOG,IAAKsB,EAAMG,cAAczB,IAAK0B,IAAKJ,EAAME,mBAAmBG,WAS5J,IAAMC,EAAS","file":"component---src-templates-work-js-1a811a296ce21659288c.js","sourcesContent":["import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport { RichText, Date } from 'prismic-reactjs'\r\nimport style from \"../sass/modules/archive.module.sass\"\r\nimport Img from \"gatsby-image\"\r\n\r\nconst Archive = ({ data }) => {\r\n  return (\r\n    <Layout>\r\n      <SEO title={RichText.asText(data.prismic.archive.title)} />\r\n      <div className={style.archiveContentWrapper}>\r\n        <Img className={style.heroImage} fluid={data.prismic.archive.hero_imageSharp.childImageSharp.fluid} alt={data.prismic.archive.hero_image.alt}/>\r\n        <div className={style.bodyContentWrapper}>\r\n          <div className={style.bodyContent}>\r\n            <div className={style.aside}>\r\n              <p>{data.prismic.archive.archive_number && <>â—Š {data.prismic.archive.archive_number}<br /></> }Archived {Date(data.prismic.archive.year).getFullYear()}</p>\r\n              {data.prismic.archive.services && <>{RichText.render(data.prismic.archive.services)}</>}\r\n            </div>\r\n            <div className={style.body}>\r\n              {RichText.render(data.prismic.archive.title)}\r\n              {data.prismic.archive.location && <>{RichText.render(data.prismic.archive.location)}</>}\r\n              <p>{Date(data.prismic.archive.year).getFullYear()}</p>\r\n              <div className={style.bodyCopy}>\r\n                {RichText.render(data.prismic.archive.body)}\r\n              </div>\r\n            </div>\r\n            <div className={style.footerContent}>\r\n              {data.prismic.archive.collaborators &&\r\n                <><p className={style.collaborators}>Collaborators</p>\r\n                {RichText.render(data.prismic.archive.collaborators)}</>\r\n              }\r\n              {data.prismic.archive.production &&\r\n                <><p className={style.production}>Production</p>\r\n                {RichText.render(data.prismic.archive.production)}</>\r\n              }\r\n            </div>\r\n          </div>\r\n          <Img className={style.sideImage} fluid={data.prismic.archive.side_imageSharp.childImageSharp.fluid} alt={data.prismic.archive.side_image.alt}/>\r\n        </div>\r\n      </div>\r\n      <div className={style.gallery}>\r\n        {data.prismic.archive.gallery.map(image => {\r\n          return (\r\n            <Img className={style.galleryImage} fluid={image.gallery_imageSharp.childImageSharp.fluid} alt={image.gallery_image.alt} key={image.gallery_imageSharp.id} />\r\n          )\r\n        })}\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\nexport default Archive\r\n\r\nexport const pageQuery = graphql`\r\n  query MyQuery($uid: String!) {\r\n    prismic {\r\n      archive(uid: $uid, lang: \"en-us\") {\r\n        _linkType\r\n        production\r\n        year\r\n        title\r\n        archive_number\r\n        side_image\r\n        side_imageSharp {\r\n          id\r\n          childImageSharp {\r\n            id\r\n            fluid {\r\n              ...GatsbyImageSharpFluid\r\n            }\r\n          }\r\n        }\r\n        services\r\n        location\r\n        hero_image\r\n        hero_imageSharp {\r\n          id\r\n          childImageSharp {\r\n            id\r\n            fluid {\r\n              ...GatsbyImageSharpFluid\r\n            }\r\n          }\r\n        }\r\n        collaborators\r\n        body\r\n        gallery {\r\n          gallery_image\r\n          gallery_imageSharp {\r\n            id\r\n            childImageSharp {\r\n              id\r\n              fluid {\r\n                ...GatsbyImageSharpFluid\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}