{"version":3,"sources":["webpack:///./src/pages/archive.js"],"names":["Archives","archives","className","style","archiveWrapper","map","archive","to","node","_meta","uid","key","id","thumbnail","fluid","hero_imageSharp","childImageSharp","alt","hero_image","RichText","asText","title","location","archive_number","year","Date","getFullYear","render","services","data","prismic","allArchives","edges","pageQuery"],"mappings":"2FAAA,oKAQMA,EAAW,SAAC,GAAoB,IAAjBC,EAAgB,EAAhBA,SACnB,OAAKA,EAEH,yBAAKC,UAAWC,IAAMC,gBACnBH,EAASI,KAAI,SAAAC,GACZ,OACE,kBAAC,OAAD,CAAMC,GAAI,YAAcD,EAAQE,KAAKC,MAAMC,IAAKC,IAAKL,EAAQE,KAAKC,MAAMG,GAAIV,UAAWC,IAAMG,SAC3F,kBAAC,IAAD,CAAKJ,UAAWC,IAAMU,UAAWC,MAAOR,EAAQE,KAAKO,gBAAgBC,gBAAgBF,MAAOG,IAAKX,EAAQE,KAAKU,WAAWD,MACzH,6BACE,4BAAKE,WAASC,OAAOd,EAAQE,KAAKa,QAClC,2BAAIF,WAASC,OAAOd,EAAQE,KAAKc,WACjC,2BAAIhB,EAAQE,KAAKe,gBAAkB,yCAAKjB,EAAQE,KAAKe,gBAAqBjB,EAAQE,KAAKgB,MAAQ,iDAAaC,eAAKnB,EAAQE,KAAKgB,MAAME,gBACnIP,WAASQ,OAAOrB,EAAQE,KAAKoB,gBAXpB,MAoBT,sBAAe,IACtB3B,EADqB,EAAX4B,KACMC,QAAQC,YAAYC,MAE1C,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKX,MAAM,YACX,kBAACrB,EAAD,CAAUC,SAAUA,MAKnB,IAAMgC,EAAS","file":"component---src-pages-archive-js-f5d4e84e148cab16e62c.js","sourcesContent":["import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport style from \"../sass/modules/archiveIndex.module.sass\"\nimport { RichText, Date } from 'prismic-reactjs'\nimport Img from \"gatsby-image\"\n\nconst Archives = ( { archives } ) => {\n  if (!archives) return null\n  return (\n    <div className={style.archiveWrapper}>\n      {archives.map(archive => {\n        return (\n          <Link to={'/archive/' + archive.node._meta.uid} key={archive.node._meta.id} className={style.archive}>\n            <Img className={style.thumbnail} fluid={archive.node.hero_imageSharp.childImageSharp.fluid} alt={archive.node.hero_image.alt}/>\n            <div>\n              <h2>{RichText.asText(archive.node.title)}</h2>\n              <p>{RichText.asText(archive.node.location)}</p>\n              <p>{archive.node.archive_number && <>â—Š {archive.node.archive_number}</> }{archive.node.year && <> Archived {Date(archive.node.year).getFullYear()}</>}</p>\n              {RichText.render(archive.node.services)}\n            </div>\n          </Link>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default ({ data }) => {\n  const archives = data.prismic.allArchives.edges\n\n  return (\n    <Layout>\n      <SEO title=\"Archive\" />\n      <Archives archives={archives} />\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query ArchiveIndex {\n    prismic {\n      allArchives(sortBy: archive_number_DESC) {\n        edges {\n          node {\n            title\n            location\n            year\n            archive_number\n            services\n            hero_image\n            hero_imageSharp {\n              id\n              uid\n              childImageSharp {\n                id\n                fluid {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            _meta {\n              id\n              uid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}